



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































from __future__ import print_function
def add_sxcmd_subconfig_isac_beautifier_shared(token_edit_list):
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("stack"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("isac_dir"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("output_dir"); token_edit_list.append(token_edit)
	
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("pixel_size"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("radius"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("noctf"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("skip_local_alignment"); token_edit_list.append(token_edit)

	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("fl"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("xr"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ts"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("fh"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("maxit"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("navg"); token_edit_list.append(token_edit)

# def create_sxcmd_subconfig_isac_beautifier_to_bfactor():
# 	token_edit_list = []
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("B_enhance"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
# 	
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("B_start"); token_edit.group = "main"; token_edit_list.append(token_edit)
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("Bfactor"); token_edit.group = "main"; token_edit_list.append(token_edit)
# 
# 	add_sxcmd_subconfig_isac_beautifier_shared(token_edit_list)
# 
# 	sxsubcmd_mpi_support = True
# 	sxcmd_subconfig = SXsubcmd_config("Beautifier - Adjust to B-factor", "Beautify the ISAC2 2D clustering result with the original pixel size. In addition, adjust the power spectrum of resultant average images using B-factor to enhance averages.", token_edit_list, sxsubcmd_mpi_support)
# 
# 	return sxcmd_subconfig


# def create_sxcmd_subconfig_isac_beautifier_to_rot_avg():
# 	token_edit_list = []
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("adjust_to_given_pw2"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
# 	
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("modelpw"); token_edit.group = "main"; token_edit_list.append(token_edit)
# 
# 	add_sxcmd_subconfig_isac_beautifier_shared(token_edit_list)
# 
# 	sxsubcmd_mpi_support = True
# 	sxcmd_subconfig = SXsubcmd_config("Beautifier - Adjust to Rot. Avgs.", "Beautify the ISAC2 2D clustering result with the original pixel size. In addition, adjust the power spectrum of resultant average images to the user-provided 1-D reference power spectrum.", token_edit_list, sxsubcmd_mpi_support)
# 
# 	return sxcmd_subconfig

# def create_sxcmd_subconfig_isac_beautifier_to_model():
# 	token_edit_list = []
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("adjust_to_analytic_model"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
# 
# 	add_sxcmd_subconfig_isac_beautifier_shared(token_edit_list)
# 
# 	sxsubcmd_mpi_support = True
# 	sxcmd_subconfig = SXsubcmd_config("Beautifier - Adjust to Model", "Beautify the ISAC2 2D clustering result with the original pixel size. In addition, adjust the power spectrum of resultant average images to an analytical model.", token_edit_list, sxsubcmd_mpi_support)
# 
# 	return sxcmd_subconfig

# def create_sxcmd_subconfig_isac_beautifier_no_adjust():
# 	token_edit_list = []
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("no_adjustment"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
# 	
# 	add_sxcmd_subconfig_isac_beautifier_shared(token_edit_list)
# 
# 	sxsubcmd_mpi_support = True
# 	sxcmd_subconfig = SXsubcmd_config("Beautifier - No Adjust", "Beautify the ISAC2 2D clustering result using the original pixel size, without adjusting the power spectrum of resultant average images. Use this option to skip all power spectrum adjustment methods and simply compute class averages with the original pixel size.", token_edit_list, sxsubcmd_mpi_support)
# 
# 	return sxcmd_subconfig

def create_sxcmd_subconfig_viper_changesize():
	token_edit_list = []
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("changesize"); token_edit.label = "Change size of VIPER model"; token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("input_stack"); token_edit.key_prefix = ""; token_edit.label = "Input Viper Model"; token_edit.help = "Input Viper Model."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = ""; token_edit.type = "data3d_one"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("output_stack"); token_edit.key_prefix = ""; token_edit.label = "Output Resized Viper Model"; token_edit.help = "Output resized (decimated or interpolated up) Viper Model."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = ""; token_edit.type = "output"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ratio"); token_edit_list.append(token_edit)

	sxsubcmd_mpi_support = False
	sxcmd_subconfig = SXsubcmd_config("Change Size of VIPER Model", None, token_edit_list, sxsubcmd_mpi_support)

	return sxcmd_subconfig

def create_sxcmd_subconfig_viper_window():
	token_edit_list = []
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("clip"); token_edit.label = "Window to specified size [Pixels]"; token_edit.is_required = True; token_edit.is_locked = False; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("input_volume"); token_edit.key_prefix = ""; token_edit.label = "Input volume"; token_edit.help = "Input volume file name."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = "none"; token_edit.type = "data3d_one"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("output_file"); token_edit.key_prefix = ""; token_edit.label = "Output windowed volume"; token_edit.help = "Output windowed (clipped/padded) volume file name."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = "none"; token_edit.type = "output"; token_edit_list.append(token_edit)

	sxsubcmd_mpi_support = False
	sxcmd_subconfig = SXsubcmd_config("Window VIPER Model", None, token_edit_list, sxsubcmd_mpi_support)

	return sxcmd_subconfig

# def create_sxcmd_subconfig_scale_clip():
# 	token_edit_list = []
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("scale"); token_edit.label = "Resample ratio"; token_edit.help = "Rescale the volume by the specified ratio before padding/clipping."; token_edit.is_required = True; token_edit_list.append(token_edit)
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("clip"); token_edit.label = "Pad/Clip volume to specified size [Pixels]"; token_edit.is_required = True; token_edit_list.append(token_edit)
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("input_volume"); token_edit.key_prefix = ""; token_edit.label = "Input volume"; token_edit.help = "Input volume file name."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = "none"; token_edit.type = "data3d_one"; token_edit_list.append(token_edit)
# 	token_edit = SXcmd_token(); token_edit.initialize_edit("output_file"); token_edit.key_prefix = ""; token_edit.label = "Output resampled volume"; token_edit.help = "Output resampled volume file name."; token_edit.group = "main"; token_edit.is_required = True; token_edit.default = "none"; token_edit.type = "output"; token_edit_list.append(token_edit)
#
# 	sxsubcmd_mpi_support = False
# 	sxcmd_subconfig = SXsubcmd_config("Resample", None, token_edit_list, sxsubcmd_mpi_support)
#
# 	return sxcmd_subconfig















































































































































































def create_sxcmd_subconfig_meridien_20171120_local():
	token_edit_list = []
	# token_edit = SXcmd_token(); token_edit.initialize_edit("continue_from_subset"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
	# token_edit = SXcmd_token(); token_edit.initialize_edit("ctrefromsort3d"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref"); token_edit.is_required = True; token_edit.is_locked = True; token_edit.default = True; token_edit.restore = True; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("output_directory"); token_edit_list.append(token_edit)
	# token_edit = SXcmd_token(); token_edit.initialize_edit("subset"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_subset"); token_edit_list.append(token_edit)
	# token_edit = SXcmd_token(); token_edit.initialize_edit("oldrefdir"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_oldrefdir"); token_edit_list.append(token_edit)
	# token_edit = SXcmd_token(); token_edit.initialize_edit("continue_from_iter"); token_edit_list.append(token_edit)
	# token_edit = SXcmd_token(); token_edit.initialize_edit("ctrefromiter"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_iter"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_initvol"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_orgstack"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_smearing"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ctref_an"); token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("memory_per_node"); token_edit_list.append(token_edit)
	
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("radius"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("mask3D"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("symmetry"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("inires"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("delta"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("xr"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ts"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
###	token_edit = SXcmd_token(); token_edit.initialize_edit("center_method"); token_edit.group = "advanced"; token_edit_list.append(token_edit) # 207/03/10 Toshio Moriya: For now disable 2D alignment related options
###	token_edit = SXcmd_token(); token_edit.initialize_edit("target_radius"); token_edit.group = "advanced"; token_edit_list.append(token_edit) # 207/03/10 Toshio Moriya: For now disable 2D alignment related options
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("shake"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("small_memory"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ref_a"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("ccfpercentage"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
	token_edit = sxgui_template.SXcmd_token(); token_edit.initialize_edit("nonorm"); token_edit.group = "advanced"; token_edit_list.append(token_edit)
###	token_edit = SXcmd_token(); token_edit.initialize_edit("function"); token_edit.group = "advanced"; token_edit_list.append(token_edit) # 207/03/10 Toshio Moriya: Not included for continue run at this point
	
	sxsubcmd_mpi_support = True
	sxcmd_subconfig = SXsubcmd_config("Subset Refinement (OLD)", None, token_edit_list, sxsubcmd_mpi_support)

	return sxcmd_subconfig

# NOTE: Toshio Moriya 2017/12/18
# Default values of some options are different between standard refinement (fresh run & simple restart) and local refinement (stack & iteration mode)
# 
# Standard: parser.add_option("--inires",  type="float",  default= 25.0,  help="Resolution of the initial_volume volume (default 25A)")
# Local   : parser.add_option("--inires",  type="float",  default= -1.0,  help="Resolution of the initial_volume volume (default 25A)")
# 
# Standard: parser.add_option("--delta",   type="float",  default= 7.50,  help="Initial angular sampling step (default 7.5)")
# Local   : parser.add_option("--delta",   type="float",  default= 3.75,  help="Initial angular sampling step (default 7.5)")
# 

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































